/****************************************************************************
*																			
*     Copyright (c) 2007-2008 Broadcom Corporation								
*																			
*   Unless you and Broadcom execute a separate written software license		
*   agreement governing use of this software, this software is licensed to you	
*   under the terms of the GNU General Public License version 2, available	
*    at http://www.gnu.org/licenses/old-licenses/gpl-2.0.html (the "GPL").	
*																			
*   Notwithstanding the above, under no circumstances may you combine this	
*   software in any way with any other Broadcom software provided under a license 
*   other than the GPL, without Broadcom's express prior written consent.	
*																			
****************************************************************************/
/****************************************************************************
*																			
*     WARNING!!!! Generated File ( Do NOT Modify !!!! )					
*																			
****************************************************************************/#ifndef CAPI2_GEN_MSG_CP_H
#define CAPI2_GEN_MSG_CP_H



Result_t CP_CAPI2_MS_IsGSMRegistered(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_IsGPRSRegistered(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetGSMRegCause(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetGPRSRegCause(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetRegisteredLAC(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetPlmnMCC(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetPlmnMNC(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_PhoneCtrlApi_ProcessPowerDownReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PhoneCtrlApi_ProcessNoRfReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PhoneCtrlApi_ProcessNoRfToCalib(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PhoneCtrlApi_ProcessPowerUpReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_IsGprsAllowed(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetCurrentRAT(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetCurrentBand(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SimApi_UpdateSMSCapExceededFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean cap_exceeded);
Result_t CP_CAPI2_NetRegApi_SelectBand(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, BandSelect_t bandSelect);
Result_t CP_CAPI2_NetRegApi_SetSupportedRATandBand(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, RATSelect_t RAT_cap, BandSelect_t band_cap, RATSelect_t RAT_cap2, BandSelect_t band_cap2);
Result_t CP_CAPI2_NetRegApi_CellLock(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean Enable, BandSelect_t lockBand, UInt8 lockrat, UInt16 lockuarfcn, UInt16 lockpsc);
Result_t CP_CAPI2_PLMN_GetCountryByMcc(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 mcc);
Result_t CP_CAPI2_MS_GetPLMNEntryByIndex(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 index, Boolean ucs2);
Result_t CP_CAPI2_MS_GetPLMNListSize(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetPLMNByCode(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean ucs2, UInt16 plmn_mcc, UInt16 plmn_mnc);
Result_t CP_CAPI2_NetRegApi_PlmnSelect(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean ucs2, PlmnSelectMode_t selectMode, PlmnSelectFormat_t format, char* plmnValue);
Result_t CP_CAPI2_NetRegApi_AbortPlmnSelect(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_GetPlmnMode(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_NetRegApi_SetPlmnMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PlmnSelectMode_t mode);
Result_t CP_CAPI2_MS_GetPlmnFormat(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_SetPlmnFormat(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, PlmnSelectFormat_t format);
Result_t CP_CAPI2_MS_IsMatchedPLMN(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 net_mcc, UInt8 net_mnc, UInt16 mcc, UInt8 mnc);
Result_t CP_CAPI2_NetRegApi_SearchAvailablePLMN(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_NetRegApi_AbortSearchPLMN(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_NetRegApi_AutoSearchReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_NetRegApi_GetPLMNNameByCode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 mcc, UInt8 mnc, UInt16 lac, Boolean ucs2);
Result_t CP_CAPI2_PhoneCtrlApi_GetSystemState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PhoneCtrlApi_SetSystemState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SystemState_t state);
Result_t CP_CAPI2_PhoneCtrlApi_GetRxSignalInfo(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SYS_GetGSMRegistrationStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYS_GetGPRSRegistrationStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYS_IsRegisteredGSMOrGPRS(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_IsRegisteredHomePLMN(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_PhoneCtrlApi_SetPowerDownTimer(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 powerDownTimer);
Result_t CP_CAPI2_SimApi_GetSmsParamRecNum(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetSmsMemExceededFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsTestSIM(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsPINRequired(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetCardPhase(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetSIMType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetPresentStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsOperationRestricted(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsPINBlocked(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHV_t chv);
Result_t CP_CAPI2_SimApi_IsPUKBlocked(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHV_t chv);
Result_t CP_CAPI2_SimApi_IsInvalidSIM(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_DetectSim(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetRuimSuppFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendVerifyChvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHV_t chv_select, CHVString_t chv);
Result_t CP_CAPI2_SimApi_SendChangeChvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHV_t chv_select, CHVString_t old_chv, CHVString_t new_chv);
Result_t CP_CAPI2_SimApi_SendSetChv1OnOffReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHVString_t chv, Boolean enable_flag);
Result_t CP_CAPI2_SimApi_SendUnblockChvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CHV_t chv_select, PUKString_t puk, CHVString_t new_chv);
Result_t CP_CAPI2_SimApi_SendSetOperStateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMOperState_t oper_state, CHVString_t chv2);
Result_t CP_CAPI2_SimApi_IsPbkAccessAllowed(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMPBK_ID_t id);
Result_t CP_CAPI2_SimApi_SendPbkInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMPBK_ID_t id);
Result_t CP_CAPI2_SimApi_SendReadAcmMaxReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendWriteAcmMaxReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CallMeterUnit_t acm_max);
Result_t CP_CAPI2_SimApi_SendReadAcmReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendWriteAcmReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CallMeterUnit_t acm);
Result_t CP_CAPI2_SimApi_SendIncreaseAcmReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CallMeterUnit_t acm);
Result_t CP_CAPI2_SimApi_SendReadSvcProvNameReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendReadPuctReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetServiceStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMService_t service);
Result_t CP_CAPI2_SimApi_GetPinStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsPinOK(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetIMSI(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetGID1(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetGID2(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetHomePlmn(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_simmiApi_GetMasterFileId(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t file_id);
Result_t CP_CAPI2_SimApi_SendOpenSocketReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendSelectAppiReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, UInt8 *aid_data, UInt8 aid_len);
Result_t CP_CAPI2_SimApi_SendDeactivateAppiReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id);
Result_t CP_CAPI2_SimApi_SendCloseSocketReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id);
Result_t CP_CAPI2_SimApi_GetAtrData(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SubmitDFileInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitEFileInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendEFileInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendDFileInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitWholeBinaryEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendWholeBinaryEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitBinaryEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt16 offset, UInt16 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendBinaryEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt16 offset, UInt16 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitRecordEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 rec_no, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendRecordEFileReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 rec_no, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitBinaryEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt16 offset, UInt8 *ptr, UInt16 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendBinaryEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt16 offset, UInt8 *ptr, UInt16 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitLinearEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 rec_no, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendLinearEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 rec_no, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitSeekRecordReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendSeekRecordReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SubmitCyclicEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendCyclicEFileUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 *ptr, UInt8 length, UInt8 path_len, UInt16 *select_path);
Result_t CP_CAPI2_SimApi_SendRemainingPinAttemptReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsCachedDataReady(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetServiceCodeStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SERVICE_CODE_STATUS_CPHS_t service_code);
Result_t CP_CAPI2_SimApi_CheckCphsService(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CPHS_SST_ENTRY_t sst_entry);
Result_t CP_CAPI2_SimApi_GetCphsPhase(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetSmsSca(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 rec_no);
Result_t CP_CAPI2_SimApi_GetIccid(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsALSEnabled(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetAlsDefaultLine(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SetAlsDefaultLine(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 line);
Result_t CP_CAPI2_SimApi_GetCallForwardUnconditionalFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetApplicationType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendWritePuctReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CurrencyName_t currency, EPPU_t *eppu);
Result_t CP_CAPI2_SimApi_SubmitRestrictedAccessReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socket_id, APDUCmd_t command, APDUFileID_t efile_id, APDUFileID_t dfile_id, UInt8 p1, UInt8 p2, UInt8 p3, UInt8 path_len, UInt16 *select_path, UInt8 *data);
Result_t CP_CAPI2_MS_GetSystemRAT(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetSupportedRAT(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetSystemBand(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetSupportedBand(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetMSClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetManufacturerName(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetModelName(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetSWVersion(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetEGPRSMSClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SimApi_SendNumOfPLMNEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_PLMN_FILE_t plmn_file);
Result_t CP_CAPI2_SimApi_SendReadPLMNEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_PLMN_FILE_t plmn_file, UInt16 start_index, UInt16 end_index);
Result_t CP_CAPI2_SimApi_SendWriteMulPLMNEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_PLMN_FILE_t plmn_file, UInt16 first_idx, UInt16 number_of_entry, SIM_MUL_PLMN_ENTRY_t *plmn_entry);
Result_t CP_CAPI2_SYS_SetRegisteredEventMask(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 *maskList, UInt8 maskLen);
Result_t CP_CAPI2_SYS_SetFilteredEventMask(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 *maskList, UInt8 maskLen, SysFilterEnable_t enableFlag);
Result_t CP_CAPI2_PhoneCtrlApi_SetRssiThreshold(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 gsm_rxlev_thresold, UInt8 gsm_rxqual_thresold, UInt8 umts_rscp_thresold, UInt8 umts_ecio_thresold);
Result_t CP_CAPI2_SYSPARM_GetChanMode(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetClassmark(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetSysparmIndPartFileVersion(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_SetDARPCfg(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 darp_cfg);
Result_t CP_CAPI2_SYSPARM_SetEGPRSMSClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 egprs_class);
Result_t CP_CAPI2_SYSPARM_SetGPRSMSClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt16 gprs_class);
Result_t CP_CAPI2_NetRegApi_DeleteNetworkName(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_TestCmds(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt32 testId, UInt32 param1, UInt32 param2, UInt8* buffer);
Result_t CP_CAPI2_SatkApi_SendPlayToneRes(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SATK_ResultCode_t resultCode);
Result_t CP_CAPI2_SATK_SendSetupCallRes(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SATK_ResultCode_t result1, SATK_ResultCode2_t result2);
Result_t CP_CAPI2_PbkApi_SetFdnCheck(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean fdn_chk_on);
Result_t CP_CAPI2_PbkApi_GetFdnCheck(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SendMemAvailInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SMS_ConfigureMEStorage(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean flag);
Result_t CP_CAPI2_MsDbApi_SetElement(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CAPI2_MS_Element_t *inElemData);
Result_t CP_CAPI2_MsDbApi_GetElement(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MS_Element_t inElemType);
Result_t CP_CAPI2_USimApi_IsApplicationSupported(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, USIM_APPLICATION_TYPE appli_type);
Result_t CP_CAPI2_USimApi_IsAllowedAPN(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* apn_name);
Result_t CP_CAPI2_USimApi_GetNumOfAPN(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_USimApi_GetAPNEntry(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 index);
Result_t CP_CAPI2_USimApi_IsEstServActivated(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, USIM_EST_SERVICE_t est_serv);
Result_t CP_CAPI2_USimApi_SendSetEstServReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, USIM_EST_SERVICE_t est_serv, Boolean serv_on);
Result_t CP_CAPI2_USimApi_SendWriteAPNReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 index, char* apn_name);
Result_t CP_CAPI2_USimApi_SendDeleteAllAPNReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_USimApi_GetRatModeSetting(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_GetGPRSRegState(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetGSMRegState(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_GetRegisteredCellInfo(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_SetMEPowerClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 band, UInt8 pwrClass);
Result_t CP_CAPI2_USimApi_GetServiceStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMService_t service);
Result_t CP_CAPI2_SimApi_IsAllowedAPN(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* apn_name);
Result_t CP_CAPI2_SmsApi_GetSmsMaxCapacity(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType);
Result_t CP_CAPI2_SmsApi_RetrieveMaxCBChnlLength(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_IsBdnOperationRestricted(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendPreferredPlmnUpdateInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_PLMN_FILE_t prefer_plmn_file);
Result_t CP_CAPI2_SIMIO_DeactiveCard(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SimApi_SendSetBdnReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMBdnOperState_t oper_state, CHVString_t chv2);
Result_t CP_CAPI2_SimApi_PowerOnOffCard(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean power_on, SIM_POWER_ON_MODE_t mode);
Result_t CP_CAPI2_SimApi_GetRawAtr(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_Set_Protocol(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 protocol);
Result_t CP_CAPI2_SimApi_Get_Protocol(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SendGenericApduCmd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *apdu, UInt16 len);
Result_t CP_CAPI2_SimApi_TerminateXferApdu(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SIM_GetSimInterface(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_NetRegApi_SetPlmnSelectRat(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 manual_rat);
Result_t CP_CAPI2_MS_IsDeRegisterInProgress(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_IsRegisterInProgress(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_PbkApi_SendUsimHdkReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PbkApi_SendUsimHdkUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, HDKString_t *hidden_key);
Result_t CP_CAPI2_PbkApi_SendUsimAasReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 index, PBK_Id_t pbk_id);
Result_t CP_CAPI2_PbkApi_SendUsimAasUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 index, PBK_Id_t pbk_id, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8* alpha);
Result_t CP_CAPI2_PbkApi_SendUsimGasReadReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 index, PBK_Id_t pbk_id);
Result_t CP_CAPI2_PbkApi_SendUsimGasUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 index, PBK_Id_t pbk_id, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8* alpha);
Result_t CP_CAPI2_PbkApi_SendUsimAasInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id);
Result_t CP_CAPI2_PbkApi_SendUsimGasInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id);
Result_t CP_CAPI2_DiagApi_MeasurmentReportReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean inPeriodicReport, UInt32 inTimeInterval);
Result_t CP_CAPI2_MsDbApi_InitCallCfg(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_InitFaxConfig(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_InitVideoCallCfg(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_InitCallCfgAmpF(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetActualLowVoltReading(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetActual4p2VoltReading(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SmsApi_SendSMSCommandTxtReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsCommand_t smsCmd, UInt8* inNum, UInt8* inCmdTxt, Sms_411Addr_t *sca);
Result_t CP_CAPI2_SmsApi_SendSMSCommandPduReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 length, UInt8 *inSmsCmdPdu);
Result_t CP_CAPI2_SmsApi_SendPDUAckToNetwork(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsMti_t mti, UInt16 rp_cause, UInt8 *tpdu, UInt8 tpdu_len);
Result_t CP_CAPI2_SmsApi_StartCellBroadcastWithChnlReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MS_MN_CB_MSG_IDS *cbmi, MS_MN_CB_LANGUAGES *lang);
Result_t CP_CAPI2_SmsApi_SetMoSmsTpMr(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* tpMr);
Result_t CP_CAPI2_SIMLOCKApi_SetStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIMLOCK_STATE_t *simlock_state);
Result_t CP_CAPI2_DIAG_ApiCellLockReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean cell_lockEnable);
Result_t CP_CAPI2_DIAG_ApiCellLockStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_MS_SetRuaReadyTimer(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt32 inRuaReadyTimer);
Result_t CP_CAPI2_CcApi_IsThereEmergencyCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MsDbApi_SYS_EnableCellInfoMsg(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean inEnableCellInfoMsg);
Result_t CP_CAPI2_LCS_L1_bb_isLocked(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean watch);
Result_t CP_CAPI2_DIALSTR_ParseGetCallType(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8* dialStr);
Result_t CP_CAPI2_LCS_FttCalcDeltaTime(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, LcsFttParams_t *inT1, LcsFttParams_t *inT2);
Result_t CP_CAPI2_NetRegApi_ForcedReadyStateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean forcedReadyState);
Result_t CP_CAPI2_SsApi_ResetSsAlsFlag(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_DIALSTR_IsValidString(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8* str);
Result_t CP_CAPI2_UTIL_Cause2NetworkCause(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Cause_t inCause);
Result_t CP_CAPI2_UTIL_ErrCodeToNetCause(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_ErrorCode_t inErrCode);
Result_t CP_CAPI2_IsGprsDialStr(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8* inDialStr);
Result_t CP_CAPI2_UTIL_GetNumOffsetInSsStr(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, char* ssStr);
Result_t CP_CAPI2_IsPppLoopbackDialStr(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8* str);
Result_t CP_CAPI2_SYS_GetRIPPROCVersion(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_SetHSDPAPHYCategory(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, int hsdpa_phy_cat);
Result_t CP_CAPI2_SYSPARM_GetHSDPAPHYCategory(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SmsApi_ConvertSmsMSMsgType(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 ms_msg_type);
Result_t CP_CAPI2_MS_GetPrefNetStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_SetHSUPAPHYCategory(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, int hsdpa_phy_cat);
Result_t CP_CAPI2_SYSPARM_GetHSUPAPHYCategory(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_InterTaskMsgToCP(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, InterTaskMsg_t *inPtrMsg);
Result_t CP_CAPI2_CcApi_GetCurrentCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNextActiveCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNextHeldCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNextWaitCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetMPTYCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetCallState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCallType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetLastCallExitCause(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetCallNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCallingInfo(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetAllCallStates(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetAllCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetAllHeldCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetAllActiveCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetAllMPTYCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNumOfMPTYCalls(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNumofActiveCalls(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetNumofHeldCalls(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_IsThereWaitingCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_IsThereAlertingCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetConnectedLineID(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCallPresent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCallIndexInThisState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CCallState_t inCcCallState);
Result_t CP_CAPI2_CcApi_IsMultiPartyCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_IsThereVoiceCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_IsConnectedLineIDPresentAllowed(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCurrentCallDurationInMilliSeconds(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetLastCallCCM(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetLastCallDuration(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetLastDataCallRxBytes(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetLastDataCallTxBytes(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetDataCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetCallClientInfo(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCallClientID(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetTypeAdd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_SetVoiceCallAutoReject(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean enableAutoRej);
Result_t CP_CAPI2_CcApi_IsVoiceCallAutoReject(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_SetTTYCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean enable);
Result_t CP_CAPI2_CcApi_IsTTYEnable(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_IsSimOriginedCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_SetVideoCallParam(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, VideoCallParam_t param);
Result_t CP_CAPI2_CcApi_GetVideoCallParam(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_GetCCM(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_SendDtmfTone(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, ApiDtmf_t *inDtmfObjPtr);
Result_t CP_CAPI2_CcApi_StopDtmfTone(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, ApiDtmf_t *inDtmfObjPtr);
Result_t CP_CAPI2_CcApi_AbortDtmf(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, ApiDtmf_t *inDtmfObjPtr);
Result_t CP_CAPI2_CcApi_SetDtmfToneTimer(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inCallIndex, DtmfTimer_t inDtmfTimerType, Ticks_t inDtmfTimeInterval);
Result_t CP_CAPI2_CcApi_ResetDtmfToneTimer(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inCallIndex, DtmfTimer_t inDtmfTimerType);
Result_t CP_CAPI2_CcApi_GetDtmfToneTimer(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inCallIndex, DtmfTimer_t inDtmfTimerType);
Result_t CP_CAPI2_CcApi_GetTiFromCallIndex(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CallIndex_t inCallIndex);
Result_t CP_CAPI2_CcApi_IsSupportedBC(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, BearerCapability_t *inBcPtr);
Result_t CP_CAPI2_CcApi_GetBearerCapability(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CallIndex_t inCallIndex);
Result_t CP_CAPI2_SmsApi_SendSMSSrvCenterNumberUpdateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsAddress_t *sca, UInt8 rec_no);
Result_t CP_CAPI2_SmsApi_GetSMSrvCenterNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 rec_no);
Result_t CP_CAPI2_SmsApi_GetSIMSMSCapacityExceededFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_IsSmsServiceAvail(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetSmsStoredState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType, UInt16 index);
Result_t CP_CAPI2_SmsApi_WriteSMSPduReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 length, UInt8 *inSmsPdu, Sms_411Addr_t *sca, SmsStorage_t storageType);
Result_t CP_CAPI2_SmsApi_WriteSMSReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* inNum, UInt8* inSMS, SmsTxParam_t *params, UInt8* inSca, SmsStorage_t storageType);
Result_t CP_CAPI2_SmsApi_SendSMSReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* inNum, UInt8* inSMS, SmsTxParam_t *params, UInt8* inSca);
Result_t CP_CAPI2_SmsApi_SendSMSPduReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 length, UInt8 *inSmsPdu, Sms_411Addr_t *sca);
Result_t CP_CAPI2_SmsApi_SendStoredSmsReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType, UInt16 index);
Result_t CP_CAPI2_SmsApi_WriteSMSPduToSIMReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 length, UInt8 *inSmsPdu, SIMSMSMesgStatus_t smsState);
Result_t CP_CAPI2_SmsApi_GetLastTpMr(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetSmsTxParams(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetTxParamInTextMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamProcId(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 pid);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamCodingType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsCodingType_t *codingType);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamValidPeriod(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 validatePeriod);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamCompression(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean compression);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamReplyPath(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean replyPath);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamUserDataHdrInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean udhi);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamStatusRptReqFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean srr);
Result_t CP_CAPI2_SmsApi_SetSmsTxParamRejDupl(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean rejDupl);
Result_t CP_CAPI2_SmsApi_DeleteSmsMsgByIndexReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storeType, UInt16 rec_no);
Result_t CP_CAPI2_SmsApi_ReadSmsMsgReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storeType, UInt16 rec_no);
Result_t CP_CAPI2_SmsApi_ListSmsMsgReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storeType, SIMSMSMesgStatus_t msgBox);
Result_t CP_CAPI2_SmsApi_SetNewMsgDisplayPref(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, NewMsgDisplayPref_t type, UInt8 mode);
Result_t CP_CAPI2_SmsApi_GetNewMsgDisplayPref(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, NewMsgDisplayPref_t type);
Result_t CP_CAPI2_SmsApi_SetSMSPrefStorage(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType);
Result_t CP_CAPI2_SmsApi_GetSMSPrefStorage(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetSMSStorageStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType);
Result_t CP_CAPI2_SmsApi_SaveSmsServiceProfile(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 profileIndex);
Result_t CP_CAPI2_SmsApi_RestoreSmsServiceProfile(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 profileIndex);
Result_t CP_CAPI2_SmsApi_SetCellBroadcastMsgTypeReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 mode, UInt8* chnlIDs, UInt8* codings);
Result_t CP_CAPI2_SmsApi_CBAllowAllChnlReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean suspend_filtering);
Result_t CP_CAPI2_SmsApi_AddCellBroadcastChnlReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* newCBMI, UInt8 cbmiLen);
Result_t CP_CAPI2_SmsApi_RemoveCellBroadcastChnlReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* newCBMI);
Result_t CP_CAPI2_SmsApi_RemoveAllCBChnlFromSearchList(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetCBMI(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetCbLanguage(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_AddCellBroadcastLangReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 newCBLang);
Result_t CP_CAPI2_SmsApi_RemoveCellBroadcastLangReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* cbLang);
Result_t CP_CAPI2_SmsApi_StartReceivingCellBroadcastReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_StopReceivingCellBroadcastReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SetCBIgnoreDuplFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean ignoreDupl);
Result_t CP_CAPI2_SmsApi_GetCBIgnoreDuplFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SetVMIndOnOff(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean on_off);
Result_t CP_CAPI2_SmsApi_IsVMIndEnabled(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetVMWaitingStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetNumOfVmscNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetVmscNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_MWI_TYPE_t vmsc_type);
Result_t CP_CAPI2_SmsApi_UpdateVmscNumberReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_MWI_TYPE_t vmsc_type, UInt8* vmscNum, UInt8 numType, UInt8 *alpha, UInt8 alphaCoding, UInt8 alphaLen);
Result_t CP_CAPI2_SmsApi_GetSMSBearerPreference(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SetSMSBearerPreference(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SMS_BEARER_PREFERENCE_t pref);
Result_t CP_CAPI2_SmsApi_SetSmsReadStatusChangeMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean mode);
Result_t CP_CAPI2_SmsApi_GetSmsReadStatusChangeMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_ChangeSmsStatusReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType, UInt16 index);
Result_t CP_CAPI2_SmsApi_SendMEStoredStatusInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MEAccess_t meResult, UInt16 slotNumber);
Result_t CP_CAPI2_SmsApi_SendMERetrieveSmsDataInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MEAccess_t meResult, UInt16 slotNumber, UInt8 *inSms, UInt16 inLen, SIMSMSMesgStatus_t status);
Result_t CP_CAPI2_SmsApi_SendMERemovedStatusInd(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MEAccess_t meResult, UInt16 slotNumber);
Result_t CP_CAPI2_SmsApi_SetSmsStoredState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsStorage_t storageType, UInt16 index, SIMSMSMesgStatus_t status);
Result_t CP_CAPI2_SmsApi_IsCachedDataReady(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_GetEnhancedVMInfoIEI(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_SetAllNewMsgDisplayPref(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *mode, UInt8 *mt, UInt8 *bm, UInt8 *ds, UInt8 *bfr);
Result_t CP_CAPI2_SmsApi_SendAckToNetwork(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SmsMti_t mti, SmsAckNetworkType_t ackType);
Result_t CP_CAPI2_SmsApi_StartMultiSmsTransferReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SmsApi_StopMultiSmsTransferReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SMS_StartCellBroadcastReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SMS_SimInit(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SMS_SetPDAStorageOverFlowFlag(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean flag);
Result_t CP_CAPI2_ISimApi_SendAuthenAkaReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *rand_data, UInt16 rand_len, UInt8 *autn_data, UInt16 autn_len);
Result_t CP_CAPI2_ISimApi_IsIsimSupported(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_ISimApi_IsIsimActivated(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_ISimApi_ActivateIsimAppli(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_ISimApi_SendAuthenHttpReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *realm_data, UInt16 realm_len, UInt8 *nonce_data, UInt16 nonce_len, UInt8 *cnonce_data, UInt16 cnonce_len);
Result_t CP_CAPI2_ISimApi_SendAuthenGbaNafReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *naf_id_data, UInt16 naf_id_len);
Result_t CP_CAPI2_ISimApi_SendAuthenGbaBootReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *rand_data, UInt16 rand_len, UInt8 *autn_data, UInt16 autn_len);
Result_t CP_CAPI2_PbkApi_GetAlpha(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* number);
Result_t CP_CAPI2_PbkApi_IsEmergencyCallNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* phone_number);
Result_t CP_CAPI2_PbkApi_IsPartialEmergencyCallNumber(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* phone_number);
Result_t CP_CAPI2_PbkApi_SendInfoReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id);
Result_t CP_CAPI2_PbkApi_SendFindAlphaMatchMultipleReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8 *alpha);
Result_t CP_CAPI2_PbkApi_SendFindAlphaMatchOneReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 numOfPbk, PBK_Id_t *pbk_id, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8 *alpha);
Result_t CP_CAPI2_PbkApi_IsReady(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PbkApi_SendReadEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id, UInt16 start_index, UInt16 end_index);
Result_t CP_CAPI2_PbkApi_SendWriteEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id, Boolean special_fax_num, UInt16 index, UInt8 type_of_number, char* number, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8 *alpha);
Result_t CP_CAPI2_PbkApi_SendUpdateEntryReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PBK_Id_t pbk_id, Boolean special_fax_num, UInt16 index, UInt8 type_of_number, char* number, ALPHA_CODING_t alpha_coding, UInt8 alpha_size, UInt8 *alpha, USIM_PBK_EXT_DATA_t *usim_adn_ext_data);
Result_t CP_CAPI2_PbkApi_SendIsNumDiallableReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* number);
Result_t CP_CAPI2_PbkApi_IsNumDiallable(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* number, Boolean is_voice_call);
Result_t CP_CAPI2_PbkApi_IsNumBarred(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* number, Boolean is_voice_call);
Result_t CP_CAPI2_PbkApi_IsUssdDiallable(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *data, UInt8 dcs, UInt8 dcsLen);
Result_t CP_CAPI2_PdpApi_SetPDPContext(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, UInt8 numParms, UInt8* pdpType, UInt8* apn, UInt8* pdpAddr, UInt8 dComp, UInt8 hComp);
Result_t CP_CAPI2_PdpApi_SetSecPDPContext(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, UInt8 numParms, UInt8 priCid, UInt8 dComp, UInt8 hComp);
Result_t CP_CAPI2_PdpApi_GetGPRSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_SetGPRSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, UInt8 NumPara, UInt8 prec, UInt8 delay, UInt8 rel, UInt8 peak, UInt8 mean);
Result_t CP_CAPI2_PdpApi_GetGPRSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_SetGPRSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, UInt8 NumPara, UInt8 prec, UInt8 delay, UInt8 rel, UInt8 peak, UInt8 mean);
Result_t CP_CAPI2_NetRegApi_SendCombinedAttachReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean SIMPresent, SIMType_t SIMType, RegType_t regType, PLMN_t plmn);
Result_t CP_CAPI2_NetRegApi_SendDetachReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, DeRegCause_t cause, RegType_t regType);
Result_t CP_CAPI2_MS_GetGPRSAttachStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_PdpApi_IsSecondaryPdpDefined(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PchExApi_SendPDPActivateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHActivateReason_t reason, PCHProtConfig_t *protConfig);
Result_t CP_CAPI2_PchExApi_SendPDPModifyReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PchExApi_SendPDPDeactivateReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PchExApi_SendPDPActivateSecReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetGPRSActivateStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_NetRegApi_SetMSClass(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, MSClass_t msClass);
Result_t CP_CAPI2_PDP_GetMSClass(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_PdpApi_GetUMTSTft(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_SetUMTSTft(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHTrafficFlowTemplate_t *pTft_in);
Result_t CP_CAPI2_PdpApi_DeleteUMTSTft(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_DeactivateSNDCPConnection(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetR99UMTSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetR99UMTSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetUMTSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetUMTSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetNegQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_SetR99UMTSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHR99QosProfile_t *pR99MinQos);
Result_t CP_CAPI2_PdpApi_SetR99UMTSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHR99QosProfile_t *pR99Qos);
Result_t CP_CAPI2_PdpApi_SetUMTSMinQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHUMTSQosProfile_t *pMinQos);
Result_t CP_CAPI2_PdpApi_SetUMTSQoS(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHUMTSQosProfile_t *pQos);
Result_t CP_CAPI2_PdpApi_GetNegotiatedParms(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_MS_IsGprsCallActive(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 chan);
Result_t CP_CAPI2_MS_SetChanGprsCallActive(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 chan, Boolean active);
Result_t CP_CAPI2_MS_SetCidForGprsActiveChan(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 chan, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetPPPModemCid(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_GetGprsActiveChanFromCid(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 cid);
Result_t CP_CAPI2_MS_GetCidFromGprsActiveChan(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 chan);
Result_t CP_CAPI2_PdpApi_GetPDPAddress(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_SendTBFData(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, UInt32 numberBytes);
Result_t CP_CAPI2_PdpApi_TftAddFilter(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHPacketFilter_T *pPktFilter);
Result_t CP_CAPI2_PdpApi_SetPCHContextState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHContextState_t contextState);
Result_t CP_CAPI2_PdpApi_SetDefaultPDPContext(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PDPDefaultContext_t *pDefaultContext);
Result_t CP_CAPI2_PchExApi_GetDecodedProtConfig(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PchExApi_BuildIpConfigOptions(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, char* username, char* password, IPConfigAuthType_t authType);
Result_t CP_CAPI2_PchExApi_BuildIpConfigOptions2(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, IPConfigAuthType_t authType, CHAP_ChallengeOptions_t *cc, CHAP_ResponseOptions_t *cr, PAP_CnfgOptions_t *po);
Result_t CP_CAPI2_PchExApi_BuildIpConfigOptionsWithChapAuthType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PCHEx_ChapAuthType_t *params);
Result_t CP_CAPI2_PdpApi_GetDefaultQos(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PdpApi_IsPDPContextActive(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_ActivateSNDCPConnection(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHL2P_t l2p);
Result_t CP_CAPI2_PdpApi_GetPDPContext(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetDefinedPDPContextCidList(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SYS_GetBootLoaderVersion(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 BootLoaderVersion_sz);
Result_t CP_CAPI2_SYS_GetDSFVersion(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, UInt8 DSFVersion_sz);
Result_t CP_CAPI2_USimApi_GetUstData(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PATCH_GetRevision(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_SendCallForwardReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_Mode_t mode, SS_CallFwdReason_t reason, SS_SvcCls_t svcCls, UInt8 waitToFwdSec, UInt8* number);
Result_t CP_CAPI2_SS_QueryCallForwardStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_CallFwdReason_t reason, SS_SvcCls_t svcCls);
Result_t CP_CAPI2_SS_SendCallBarringReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_Mode_t mode, SS_CallBarType_t callBarType, SS_SvcCls_t svcCls, UInt8* password);
Result_t CP_CAPI2_SS_QueryCallBarringStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_CallBarType_t callBarType, SS_SvcCls_t svcCls);
Result_t CP_CAPI2_SS_SendCallBarringPWDChangeReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_CallBarType_t callBarType, UInt8* oldPwd, UInt8* newPwd, UInt8* reNewPwd);
Result_t CP_CAPI2_SS_SendCallWaitingReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_Mode_t mode, SS_SvcCls_t svcCls);
Result_t CP_CAPI2_SS_QueryCallWaitingStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_SvcCls_t svcCls);
Result_t CP_CAPI2_SS_QueryCallingLineIDStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_QueryConnectedLineIDStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_QueryCallingLineRestrictionStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_QueryConnectedLineRestrictionStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_QueryCallingNAmePresentStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_SetCallingLineIDStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean enable);
Result_t CP_CAPI2_SS_SetCallingLineRestrictionStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, CLIRMode_t clir_mode);
Result_t CP_CAPI2_SS_SetConnectedLineIDStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean enable);
Result_t CP_CAPI2_SS_SetConnectedLineRestrictionStatus(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, Boolean enable);
Result_t CP_CAPI2_SS_SendUSSDConnectReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, USSDString_t *ussd);
Result_t CP_CAPI2_SS_SendUSSDData(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, CallIndex_t ussd_id, UInt8 dcs, UInt8 dlen, UInt8 *ussdString);
Result_t CP_CAPI2_SsApi_DialStrSrvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_DialStrSrvReq_t *inDialStrSrvReqPtr);
Result_t CP_CAPI2_SS_EndUSSDConnectReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, CallIndex_t ussd_id);
Result_t CP_CAPI2_SsApi_SsSrvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_SrvReq_t *inApiSrvReqPtr);
Result_t CP_CAPI2_SsApi_UssdSrvReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_UssdSrvReq_t *inUssdSrvReqPtr);
Result_t CP_CAPI2_SsApi_UssdDataReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_UssdDataReq_t *inUssdDataReqPtr);
Result_t CP_CAPI2_SsApi_SsReleaseReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_SrvReq_t *inApiSrvReqPtr);
Result_t CP_CAPI2_SsApi_DataReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SsApi_DataReq_t *inDataReqPtr);
Result_t CP_CAPI2_SS_SsApiReqDispatcher(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_SsApiReq_t *inSsApiReqPtr);
Result_t CP_CAPI2_SS_GetStr(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, SS_ConstString_t strName);
Result_t CP_CAPI2_SS_SetClientID(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_GetClientID(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SS_ResetClientID(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SatkApi_GetCachedRootMenuPtr(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SatkApi_SendUserActivityEvent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SatkApi_SendIdleScreenAvaiEvent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SatkApi_SendLangSelectEvent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 language);
Result_t CP_CAPI2_SatkApi_SendBrowserTermEvent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean user_term);
Result_t CP_CAPI2_SatkApi_CmdResp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SATK_EVENTS_t toEvent, UInt8 result1, UInt8 result2, SATKString_t *inText, UInt8 menuID);
Result_t CP_CAPI2_SatkApi_DataServCmdResp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, StkCmdRespond_t *response);
Result_t CP_CAPI2_SatkApi_SendDataServReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, StkDataServReq_t *dsReq);
Result_t CP_CAPI2_SatkApi_SendTerminalRsp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SATK_EVENTS_t toEvent, UInt8 result1, UInt16 result2, SATKString_t *inText, UInt8 menuID, UInt8 *ssFacIePtr);
Result_t CP_CAPI2_SatkApi_SetTermProfile(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *data, UInt8 length);
Result_t CP_CAPI2_SatkApi_SendEnvelopeCmdReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *data, UInt8 data_len);
Result_t CP_CAPI2_SatkApi_SendTerminalRspReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *data, UInt8 data_len);
Result_t CP_CAPI2_StkApi_SendBrowsingStatusEvent(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *status, UInt8 data_len);
Result_t CP_CAPI2_SatkApi_SendCcSetupReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, TypeOfNumber_t ton, NumberPlanId_t npi, char *number, BearerCapability_t *bc1, Subaddress_t *subaddr_data, BearerCapability_t *bc2, UInt8 bc_repeat_ind, Boolean simtk_orig);
Result_t CP_CAPI2_SatkApi_SendCcSsReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 ton_npi, UInt8 ss_len, UInt8 *ss_data);
Result_t CP_CAPI2_SatkApi_SendCcUssdReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 ussd_dcs, UInt8 ussd_len, UInt8 *ussd_data);
Result_t CP_CAPI2_SatkApi_SendCcSmsReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 sca_toa, UInt8 sca_number_len, UInt8 *sca_number, UInt8 dest_toa, UInt8 dest_number_len, UInt8 *dest_number, Boolean simtk_orig);
Result_t CP_CAPI2_LCS_CpMoLrReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, LcsCpMoLrReq_t *inCpMoLrReq);
Result_t CP_CAPI2_LCS_CpMoLrAbort(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_LCS_CpMtLrVerificationRsp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, LCS_VerifRsp_t inVerificationRsp);
Result_t CP_CAPI2_LCS_CpMtLrRsp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SS_Operation_t inOperation, Boolean inIsAccepted);
Result_t CP_CAPI2_LCS_CpLocUpdateRsp(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, LCS_TermCause_t *inTerminationCause);
Result_t CP_CAPI2_LCS_DecodePosEstimate(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, LCS_LocEstimate_t *inLocEstData);
Result_t CP_CAPI2_LCS_EncodeAssistanceReq(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, LcsAssistanceReq_t *inAssistReq);
Result_t CP_CAPI2_LCS_FttSyncReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_MakeVoiceCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* callNum, VoiceCallParam_t voiceCallParam);
Result_t CP_CAPI2_CcApi_MakeDataCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* callNum);
Result_t CP_CAPI2_CcApi_MakeFaxCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* callNum);
Result_t CP_CAPI2_CcApi_MakeVideoCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8* callNum);
Result_t CP_CAPI2_CcApi_EndCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIdx);
Result_t CP_CAPI2_CcApi_EndAllCalls(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_EndCallImmediate(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIdx);
Result_t CP_CAPI2_CcApi_EndAllCallsImmediate(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_EndMPTYCalls(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_EndHeldCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_AcceptVoiceCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_AcceptDataCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_AcceptWaitingCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_AcceptVideoCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_HoldCurrentCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_HoldCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_RetrieveNextHeldCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_RetrieveCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_SwapCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_SplitCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_JoinCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_TransferCall(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_CcApi_GetCNAPName(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_SYSPARM_GetHSUPASupported(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_SYSPARM_GetHSDPASupported(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID);
Result_t CP_CAPI2_NetRegApi_ForcePsReleaseReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_IsCurrentStateMpty(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 callIndex);
Result_t CP_CAPI2_PdpApi_GetPCHContextState(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_PdpApi_GetPDPContextEx(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid);
Result_t CP_CAPI2_SimApi_GetCurrLockedSimlockType(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_SubmitSelectFileSendApduReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socketId, APDUFileID_t dfileId, APDUFileID_t efileId, UInt8 pathLen, UInt16 *pPath, UInt16 apduLen, UInt8 *pApdu);
Result_t CP_CAPI2_SimApi_SubmitMulRecordEFileReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socketId, APDUFileID_t efileId, APDUFileID_t dfileId, UInt8 firstRecNum, UInt8 numOfRec, UInt8 recLen, UInt8 pathLen, UInt16 *pSelectPath, Boolean optimizationFlag1, Boolean optimizationFlag2);
Result_t CP_CAPI2_SimApi_SendSelectApplicationReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 socketId, UInt8 *aid_data, UInt8 aid_len, SIM_APP_OCCURRENCE_t app_occur);
Result_t CP_CAPI2_SimApi_PerformSteeringOfRoaming(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, SIM_MUL_PLMN_ENTRY_t *inPlmnListPtr, UInt8 inListLen, UInt8 inRefreshType);
Result_t CP_CAPI2_SatkApi_SendProactiveCmdFetchingOnOffReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean enableCmdFetching);
Result_t CP_CAPI2_SatkApi_SendExtProactiveCmdReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 dataLen, UInt8 *ptrData);
Result_t CP_CAPI2_SatkApi_SendTerminalProfileReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 dataLen, UInt8 *ptrData);
Result_t CP_CAPI2_SatkApi_SendPollingIntervalReq(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 pollingInterval);
Result_t CP_CAPI2_PdpApi_SetPDPActivationCallControlFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean flag);
Result_t CP_CAPI2_PdpApi_GetPDPActivationCallControlFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PdpApi_SendPDPActivateReq_PDU(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, PCHPDPActivateCallControlResult_t callControlResult, PCHPDPActivatePDU_t *pdu);
Result_t CP_CAPI2_PdpApi_RejectNWIPDPActivation(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PCHPDPAddress_t inPdpAddress, PCHRejectCause_t inCause, PCHAPN_t inApn);
Result_t CP_CAPI2_PdpApi_SetPDPBearerCtrlMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inMode);
Result_t CP_CAPI2_PdpApi_GetPDPBearerCtrlMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PdpApi_RejectSecNWIPDPActivation(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PDP_ActivateSecNWI_Ind_t *pActivateSecInd, PCHRejectCause_t inCause);
Result_t CP_CAPI2_PdpApi_SetPDPNWIControlFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean inFlag);
Result_t CP_CAPI2_PdpApi_GetPDPNWIControlFlag(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PdpApi_CheckUMTSTft(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, PCHTrafficFlowTemplate_t *inTftPtr);
Result_t CP_CAPI2_PdpApi_IsAnyPDPContextActive(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_PdpApi_IsAnyPDPContextActivePending(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_CcApi_SetElement(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CcApi_Element_t inElement, void *inCompareObjPtr, void *outElementPtr);
Result_t CP_CAPI2_CcApi_GetElement(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, CcApi_Element_t inElement, void *inCompareObjPtr);
Result_t CP_CAPI2_WL_PsSetFilterList(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 cid, WL_SocketFilterList_t *inDataPtr);
Result_t CP_CAPI2_PdpApi_GetProtConfigOptions(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inCid);
Result_t CP_CAPI2_PdpApi_SetProtConfigOptions(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 inCid, PCHProtConfig_t *inProtConfigPtr);
Result_t CP_CAPI2_LcsApi_RrlpSendDataToNetwork(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *inData, UInt32 inDataLen);
Result_t CP_CAPI2_LcsApi_RrlpRegisterDataHandler(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_LcsApi_RrcRegisterDataHandler(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_LcsApi_RrcSendUlDcch(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 *inData, UInt32 inDataLen);
Result_t CP_CAPI2_LcsApi_RrcMeasCtrlFailure(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 inTransactionId, LcsRrcMcFailure_t inMcFailure, UInt32 inErrorCode);
Result_t CP_CAPI2_LcsApi_RrcStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, LcsRrcMcStatus_t inStatus);
Result_t CP_CAPI2_SimApi_PowerOnOffSim(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, Boolean power_on, SIM_POWER_ON_MODE_t mode);
Result_t CP_CAPI2_PhoneCtrlApi_SetPagingStatus(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt8 status);
Result_t CP_CAPI2_LcsApi_GetGpsCapabilities(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_LcsApi_SetGpsCapabilities(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, UInt16 inCapMask);
Result_t CP_CAPI2_CcApi_AbortDtmfTone(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, ApiDtmf_t *inDtmfObjPtr);
Result_t CP_CAPI2_NetRegApi_SetSupportedRATandBandEx(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, RATSelect_t RAT_cap, BandSelect_t band_cap, RATSelect_t RAT_cap2, BandSelect_t band_cap2);
Result_t CP_CAPI2_NetRegApi_SetTZUpdateMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr, TimeZoneUpdateMode_t mode);
Result_t CP_CAPI2_NetRegApi_GetTZUpdateMode(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetAdData(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_SimApi_GetCurrentSimVoltage(CAPI2_ReqRep_t* rsp, ClientInfo_t* inClientInfoPtr);
Result_t CP_CAPI2_MS_SetSupportedRATandBand(CAPI2_ReqRep_t* rsp, UInt32 tid, UInt8 clientID, RATSelect_t RAT_cap, BandSelect_t band_cap);
#endif
