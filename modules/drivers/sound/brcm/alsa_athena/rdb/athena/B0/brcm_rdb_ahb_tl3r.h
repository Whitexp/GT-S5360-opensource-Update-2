/*******************************************************************************************
Copyright 2010 Broadcom Corporation.  All rights reserved.

Unless you and Broadcom execute a separate written software license agreement
governing use of this software, this software is licensed to you under the
terms of the GNU General Public License version 2, available at
http://www.gnu.org/copyleft/gpl.html (the "GPL").

Notwithstanding the above, under no circumstances may you combine this software
in any way with any other Broadcom software provided under a license other than
the GPL, without Broadcom's express prior written consent.
*******************************************************************************************/
/*
 *
 * $brcm_Workfile: $
 * $brcm_Revision: $
 * $brcm_Date: $
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on         Fri Jul 30 16:49:27 2010
 *                 MD5 Checksum         4e59fca18d7d516b885a5d762dbb685a
 *
 * Compiled with:  RDB Utility          1.0
 *                 RDB Parser           3.0
 *                 rdbfirmware_split.pl 3.0
 *                 Perl Interpreter     5.008008
 *                 Operating System     linux
 *
 * Spec Versions:  AUXADC               1.0
 *                 AUXMIC               1.0
 *                 BB2PMU_ADCSYNC       1.0
 *                 BBRX                 1
 *                 CAMINTF              1.0
 *                 CIPHER               1.0
 *                 CLK                  1.0
 *                 CPC_HARQ             1
 *                 CRC                  1.0
 *                 CRYPTO               1.0
 *                 CSTF                 1.0
 *                 CSTPIU               1.0
 *                 DATAPACKER           1.0
 *                 DES                  1.0
 *                 DMAC                 1.0
 *                 DSI                  1.0
 *                 DSP_3WIRE_INTF       1.0
 *                 DSP_AC               1.0
 *                 DSP_AUDIO            3.0
 *                 DSP_CIPHER           1.0
 *                 DSP_CPMR             1
 *                 DSP_DIGRF            1.0
 *                 DSP_EQUALIZER        1.0
 *                 DSP_EVENT_CTRL       1.0
 *                 DSP_INTC             1
 *                 DSP_PCM              1.0
 *                 DSP_RFSPI            1.0
 *                 DSP_RF_GPO           1.0
 *                 DSP_RX_CONTROL       1.0
 *                 DSP_SYS_TIMER        1.0
 *                 DSP_TL3R             1
 *                 DSP_TPIF             1
 *                 DSP_TX_CONTROL       1.0
 *                 ECT                  1.0
 *                 EMI                  1
 *                 ETM                  1.0
 *                 FSHOST               1.0
 *                 FSHOST_CTRL          1.0
 *                 GEA                  1.1
 *                 GPIO                 1.0
 *                 GPTIMERS             2.3
 *                 HARQ                 1
 *                 HSDPA_Turbo_Decoder_Module1
 *                 HSOTG                1.0
 *                 HSOTG_CTRL           1.0
 *                 HTM                  1.0
 *                 HUCM                 1
 *                 I2S                  1.0
 *                 INTC                 1.0
 *                 KEYPAD               1.0
 *                 L210                 1.0
 *                 LCDC                 1.0
 *                 MHARB                1.0
 *                 MLARB                1.0
 *                 MP                   1.0
 *                 MPHI                 1.0
 *                 MSPRO                1.0
 *                 NVSRAM               1.1
 *                 OTP                  1.0
 *                 PKA                  1.0
 *                 PWM_TOP              1.0
 *                 PWRWDOG              
 *                 RNG                  1.0
 *                 SCLKCAL              1.0
 *                 SDHOST_SS            3.4
 *                 SIMI                 1.0
 *                 SLPTIMER             1.0
 *                 SOFTRST              1.0
 *                 SPI                  1.0
 *                 SYSCFG               1.0
 *                 UARTA                1.0
 *                 UARTB                1.0
 *                 UARTC                1.0
 *                 V3D                  1.1
 *                 WCDMA_BOOT           2.0
 *                 WCDMA_GPIO           1
 *                 WTI                  1.0
 *                 afc_top              1
 *                 bb_tx_filters_and_2091_if1
 *                 combiner             1
 *                 cpp_cluster          1
 *                 decoderh264          1.1
 *                 deinterleaver        1
 *                 edch_fng_core_top    1
 *                 encoderh264          1.1
 *                 fng_core_top         1
 *                 hs_scch              1
 *                 i2c_mm_hs            1.0
 *                 layer_1_int_cont     1
 *                 layer_2_int_cont     1
 *                 master_timer         1
 *                 modem_cfg_and_core_clks1
 *                 modem_clocks_part_1  1
 *                 modem_clocks_part_2  1
 *                 mpdxx_apb            1
 *                 pdm_top              1
 *                 prism                1
 *                 psync_for_10ppm      1
 *                 rake_fng_top         1
 *                 rake_tiny_fng_top    1
 *                 rf_interface_block1_top1
 *                 rf_interface_block2_top1
 *                 rf_interface_block3_top1
 *                 rf_interface_block4_top1
 *                 rf_interface_block5_top1
 *                 rfic_mst             1
 *                 rfic_reg_file        1
 *                 rfic_scheduler       1
 *                 rxbitlevel           1
 *                 sc_xy_state_derive   1
 *                 ssync_apb            1
 *                 sttd_apb             1
 *                 tiny_fng_core_top    1
 *                 tx                   1
 *                 wcdma_gp_timers      1
 *                 wcdma_uart           1
 *
 * RDB Files:  /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_chip
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/auxmic_det.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/i2c_mm_hs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/sdhost_ss.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/GEA.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/lcdc_top.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/pka_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rng.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uarta.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uart_defs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uartb.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uart_defs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uartc.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/uart_defs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/emi.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/softrst.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/ect_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/etm.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/sim_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dmac.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dmac_defs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/crc.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/crypto_top.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/des.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/mipi_dsi_to
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_Matr
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_Matr
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/mp.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/encoderh264
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/decoder_h26
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_intr
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/gptimers.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/slptimer.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/wtimer.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/mspro.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/sclkcal.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/gpio.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/gpio_defs.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/keypad.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/auxadc.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/BB2PMU_adcs
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/secure_otp.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_sysc
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/da.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/athena_clk_
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/nv_sram_if.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/spi.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/datapacker.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/cipher.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/hucm.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/cstf.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/cstpiu.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/hsotg.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/hsotg_ctrl.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/fsusbhost.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/fshost_ctrl
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/htm.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/wcdma_boot.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/pwm_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/mphi.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/camintf_top
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/L210.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/vc4_v3d_reg
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/pwrwdog.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/afc_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/bbrx.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/combiner.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/cpc_harq.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/cpp_cluster
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/deinterleav
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/edch_fng_co
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/fng_core_to
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/harq.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/hs_scch.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/hsdpa_turbo
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/layer_1_int
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/layer_2_int
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/master_time
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/modem_cfg_a
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/modem_clock
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/modem_clock
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/mpdxx_apb.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/pdm_top.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/prism.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/psync_for_1
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rake_fng_to
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rake_tiny_f
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rf_interfac
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rf_interfac
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rf_interfac
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rf_interfac
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rf_interfac
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rfic_mst.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rfic_reg_fi
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rxbitlevel.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/sc_xy_state
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/ssync_apb.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/sttd_apb.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/tiny_fng_co
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/tx.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/wcdma_gpio.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/wcdma_gp_ti
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/wcdma_uart.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/rfic_schedu
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/bb_tx_filte
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_cpmr.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_tl3r.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_intc.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_tpif.rd
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_cipher.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_equaliz
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_evnt_ct
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_rf_gpo.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_rf_spi.
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_3_wire_
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_sys_tim
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_2g_digr
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_ac.rdb
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_rx_cont
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_tx_cont
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_audio.r
 *             /projects/athena_ext4/revB0/users/aytong/sandbox/athena_revB0/design_database/athena_chip/rdb/dsp_pcm.rdb
 *
 * Revision History:
 *
 * $brcm_Log: $
 *
 ***************************************************************************/

#ifndef __ATHENA_AHB_TL3R_H__
#define __ATHENA_AHB_TL3R_H__

/****  AHB_TL3R  ****/
//#define AHB_TL3R_BASE_ADDR      0x30400000      /* AHB_TL3R core */

typedef volatile struct {
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R0;                            // 000
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R1;                            // 004
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R2;                            // 008
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R3;                            // 00C
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R4;                            // 010
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R5;                            // 014
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R6;                            // 018
    UInt32  m_AHB_TL3R_TL3_SHM_CFG_R7;                            // 01C
    UInt32  m_RESERVED_020[1];                                  // 020
    UInt32  m_AHB_TL3R_TL3_CFG_R;                                 // 024
    UInt32  m_AHB_TL3R_TL3_A2D_ACCESS_EN2_R;                      // 028
    UInt32  m_AHB_TL3R_TL3_A2D_ACCESS_EN_R;                       // 02C
    UInt32  m_AHB_TL3R_TL3_STA_R;                                 // 030
    UInt32  m_AHB_TL3R_TL3_NMI_DISABLE_R;                         // 034
    UInt32  m_AHB_TL3R_TL3_TEST_R;                                // 038
    UInt32  m_AHB_TL3R_TL3_CTRL_REG;                              // 03C
    UInt32  m_AHB_TL3R_TL3_SLEEP_MONITOR_REG;                     // 040
} BCMRDB_AHB_TL3R_REGS;

/****  AHB_TL3R  ****/
#define AHB_TL3R_TL3_SHM_CFG_R0          (AHB_TL3R_BASE_ADDR + 0x0000)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R0_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R0_reserved_12to9       0x1E00
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R0_addr_mode          0x0100                                     /* RW Address method  */
  #define AHB_TL3R_TL3_SHM_CFG_R0_reserved_7to7       0x0080
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R0_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R0_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R0_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R0_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R1          (AHB_TL3R_BASE_ADDR + 0x0004)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R1_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R1_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R1_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R1_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R1_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R1_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R2          (AHB_TL3R_BASE_ADDR + 0x0008)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R2_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R2_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R2_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R2_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R2_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R2_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R3          (AHB_TL3R_BASE_ADDR + 0x000C)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R3_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R3_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R3_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R3_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R3_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R3_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R4          (AHB_TL3R_BASE_ADDR + 0x0010)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R4_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R4_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R4_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R4_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R4_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R4_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R5          (AHB_TL3R_BASE_ADDR + 0x0014)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R5_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R5_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R5_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R5_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R5_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R5_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R6          (AHB_TL3R_BASE_ADDR + 0x0018)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R6_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R6_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R6_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R6_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R6_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R6_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_SHM_CFG_R7          (AHB_TL3R_BASE_ADDR + 0x001C)  /* ARM TL3 Shared Memory Configuration Regist */
  #define AHB_TL3R_TL3_SHM_CFG_R7_sm_base_addr_31to13       0xFFFFE000
                                                       /* RW Shared Memory Base Address[31:13]. (default=0x06000000), */
  #define AHB_TL3R_TL3_SHM_CFG_R7_reserved_12to7       0x1F80
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SHM_CFG_R7_rbuf_adaptive_en       0x0040
  /* RW SMI Adaptive Prefetch Enable -- To enable adaptive prefetch, clear RBUF_EN= 0 and set RBUF_ADAPTIVE_EN=1., if */
  #define AHB_TL3R_TL3_SHM_CFG_R7_wbuf_en            0x0020                                     /* RW Shared Memory I */
  #define AHB_TL3R_TL3_SHM_CFG_R7_page_size_3to0       0x001E
  /* RW Shared Memory Interface Address formation., This field is used with the SM_BASE_ADDR_31TO13 (ASMCFGRx[31:13]) */
  #define AHB_TL3R_TL3_SHM_CFG_R7_rbuf_en            0x0001                                     /* RW SMI Read Buffer */
#define AHB_TL3R_TL3_CFG_R               (AHB_TL3R_BASE_ADDR + 0x0024)  /* ARM TL3 Configuration Register             */
  #define AHB_TL3R_TL3_CFG_R_icache_ahb_base_addr_16to0       0xFFFF8000
                                                  /* RW iCache MSB of AHB Base Address at 16K Words (32KB) boundary., */
  #define AHB_TL3R_TL3_CFG_R_reserved_14to4          0x7FF0                                /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_CFG_R_icache_page_range_3to0       0x000F
  /* RW iCache Number of Pages (from 1 to 15 pages), , 0h: error. 0 cache size is not allowed., 1-Ch: address transla */
#define AHB_TL3R_TL3_A2D_ACCESS_EN2_R    (AHB_TL3R_BASE_ADDR + 0x0028)  /* ARM TL3 A2D Access Enable 2 Register (for  */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_ACCE55_31to8       0xFFFFFF00
  /* RW ARM to DSP Space Access and clock Enable Code, If set to 24'hACCE55, allows ARM to access certain DSP address */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_dma2dsp_peripheral_clock_force_en       0x0080
  /* RW DMA to DSP Clock Force Enable for Peripherals., 0: dsp peripheral clock request is asserted on a per transact */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_peripheral_clock_force_en       0x0040
  /* RW ARM to DSP Clock Force Enable for Peripherals., 0: dsp peripheral clock request is asserted on a per transact */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_dmem_clock_force_en       0x0020
  /* RW ARM to DSP Clock Force Enable for Data Memory., 0: dsp core clk request is not forced on. core clk will stop  */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_pmem_clock_force_en       0x0010
  /* RW ARM to DSP Clock Force Enable for Program Memory., 0: dsp core clk request is not forced on. core clk will st */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_dma2dsp_peripheral_access_en       0x0008
  /* RW DMA to DSP Access Enable for Peripherals., 0: disable, 1: enable. If set, allows ARM and DMA to access DSP TL */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_peripheral_access_en       0x0004
  /* RW ARM to DSP Access Enable for Peripherals., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 periph */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_dmem_access_en       0x0002
  /* RW ARM to DSP Access Enable for Data Memory., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 data m */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN2_R_arm2dsp_pmem_access_en       0x0001
  /* RW ARM to DSP Access Enable for Program Memory., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 pro */
#define AHB_TL3R_TL3_A2D_ACCESS_EN_R     (AHB_TL3R_BASE_ADDR + 0x002C)  /* ARM TL3 A2D Access Enable Register (for AP */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_ACCE55_31to8       0xFFFFFF00
  /* RW ARM to DSP Space Access and clock Enable Code, If set to 24'hACCE55, allows ARM to access certain DSP address */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_dma2dsp_peripheral_clock_force_en       0x0080
  /* RW DMA to DSP Clock Force Enable for Peripherals., 0: dsp peripheral clock request is asserted on a per transact */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_peripheral_clock_force_en       0x0040
  /* RW ARM to DSP Clock Force Enable for Peripherals., 0: dsp peripheral clock request is asserted on a per transact */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_dmem_clock_force_en       0x0020
  /* RW ARM to DSP Clock Force Enable for Data Memory., 0: dsp core clk request is not forced on. core clk will stop  */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_pmem_clock_force_en       0x0010
  /* RW ARM to DSP Clock Force Enable for Program Memory., 0: dsp core clk request is not forced on. core clk will st */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_dma2dsp_peripheral_access_en       0x0008
  /* RW DMA to DSP Access Enable for Peripherals., 0: disable, 1: enable. If set, allows ARM and DMA to access DSP TL */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_peripheral_access_en       0x0004
  /* RW ARM to DSP Access Enable for Peripherals., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 periph */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_dmem_access_en       0x0002
  /* RW ARM to DSP Access Enable for Data Memory., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 data m */
  #define AHB_TL3R_TL3_A2D_ACCESS_EN_R_arm2dsp_pmem_access_en       0x0001
  /* RW ARM to DSP Access Enable for Program Memory., 0: disable, 1: enable. If set, allows ARM to access DSP TL3 pro */
#define AHB_TL3R_TL3_STA_R               (AHB_TL3R_BASE_ADDR + 0x0030)  /* DSP TL3 Status Register */
  #define AHB_TL3R_TL3_STA_R_tl3_rev_number_2to0       0xE0000000
                                                                      /* RO Current TL3 H/W Revision Number: 3'b000., */
  #define AHB_TL3R_TL3_STA_R_smirbuf_empty           0x10000000                            /* RO Shared Memory Read B */
  #define AHB_TL3R_TL3_STA_R_reserved_27             0x08000000                            /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_smiwbuf_full            0x04000000                            /* RO Shared Memory Write  */
  #define AHB_TL3R_TL3_STA_R_smiwbuf_empty           0x02000000                            /* RO Shared Memory Write  */
  #define AHB_TL3R_TL3_STA_R_smiwbuf_busy            0x01000000                            /* RO Shared Memory Write  */
  #define AHB_TL3R_TL3_STA_R_smi_busy                0x00800000                            /* RO Shared Memory Busy I */
  #define AHB_TL3R_TL3_STA_R_dmss_wr_err             0x00400000                            /* RO DMEM Address and ROM */
  #define AHB_TL3R_TL3_STA_R_zsm_addr_err            0x00200000                            /* RO Z Shared MEM Address */
  #define AHB_TL3R_TL3_STA_R_zio_unalign_err         0x00100000                            /* RO ZIO to APB 32-bit ac */
  #define AHB_TL3R_TL3_STA_R_ahb_zsm_err             0x00080000                            /* RO Shared Memory AHB bu */
  #define AHB_TL3R_TL3_STA_R_reserved_18             0x00040000                            /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_ahb_icache_err          0x00020000                            /* RO iCache AHB bus Maste */
  #define AHB_TL3R_TL3_STA_R_pmss_addr_err           0x00010000                            /* RO PMEM Address out of  */
  #define AHB_TL3R_TL3_STA_R_reserved_15             0x8000                                /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_tl3reg_err              0x4000                                /* RO DSP ZIOtoAHB Registe */
  #define AHB_TL3R_TL3_STA_R_reserved_13to12         0x3000                                /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_reserved_11to5          0x0FE0                                /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_dspp4_slave_err         0x0010                                /* RO DSP Peripheral 4 (eq */
  #define AHB_TL3R_TL3_STA_R_reserved_3to1           0x000E                                /* RO Reserved. If write,  */
  #define AHB_TL3R_TL3_STA_R_dspp0_slave_err         0x0001                                /* RO DSP Peripheral 0 (in */
#define AHB_TL3R_TL3_NMI_DISABLE_R       (AHB_TL3R_BASE_ADDR + 0x0034)  /* DSP TL3 NMI Disable Register               */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_31to22       0xFF800000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_dmss_wr_err_nmi_disable       0x00400000
           /* RO DMEM Address and ROM Write Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_zsm_addr_err_nmi_disable       0x00200000
    /* RO Z Shared MEM Address Out of Bound Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_dsp2ahb_unalign_err_nmi_disable       0x00100000
                    /* RO DSP to AHB Unalign Error NMI Disable, 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_ahb_smi_err_nmi_disable       0x00080000
          /* RO Shared Memory AHB bus Master Error NMI Disable, 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_18       0x00040000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_ahb_icache_err_nmi_disable       0x00020000
                 /* RO icache AHB bus Master Error NMI Disable, 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_pmem_addr_err_nmi_disable       0x00010000
            /* RO PMEM Address Out of Bound Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_15       0x8000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_tl3reg_err_nmi_disable       0x4000
          /* RO DSP Z to TL3 Register slave Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_13       0x2000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_12       0x1000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_11to5       0x0FE0
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_peripheral_4_err_nmi_disable       0x0010
                 /* RO DSP APB Peripheral 4 Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_reserved_3to1       0x000E
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_NMI_DISABLE_R_peripheral_0_err_nmi_disable       0x0001
                 /* RO DSP APB Peripheral 0 Error NMI Disable., 0: enabled., 1: disable the corresponding error NMI., */
#define AHB_TL3R_TL3_TEST_R              (AHB_TL3R_BASE_ADDR + 0x0038)  /* ARM DSP Test Register */
  #define AHB_TL3R_TL3_TEST_R_dsp_test_reg_31to16       0xFFFF0000
                                              /* RO DSP TL3 Test Register. Value from DSP External Register3 DEXTR3., */
  #define AHB_TL3R_TL3_TEST_R_arm_test_reg_15to0       0xFFFF
                                                   /* RW ARM TL3 Test Register. Only ARM can write to this register., */
#define AHB_TL3R_TL3_CTRL_REG            (AHB_TL3R_BASE_ADDR + 0x003C)  /* ARM TL3 Control Register                   */
  #define AHB_TL3R_TL3_CTRL_REG_reserved_31to29       0xE0000000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_CTRL_REG_ahbs_herror_status       0x10000000
  /* RW AHB Slave Port Hresp Status, 0: no error., 1: error response occurred., This bit is readable and can only be  */
  #define AHB_TL3R_TL3_CTRL_REG_arm_invalidate_prebuf       0x08000000
  /* RW ARM Shared Memory Prefetch Buffer Invalidate, 0: Continue operation., 1: Invalidate shared memory prefetch bu */
  #define AHB_TL3R_TL3_CTRL_REG_dsp2apb_clk_2to1       0x04000000
  /* RW DSP to APB Clock Ratio 2 to 1, 0: clock ratio is 1:1, 1: clock ratio is 2:1, , Example clock selections in Mh */
  #define AHB_TL3R_TL3_CTRL_REG_azarb_wait_cycles_5to0       0x03F00000
                                      /* RW AZ ARB Mux ARM access wait cycle number (N), N=0,1,2,...,63 AMBA clocks., */
  #define AHB_TL3R_TL3_CTRL_REG_reserved_19to16       0x000F0000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_CTRL_REG_reserved_15to10       0xFC00
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_CTRL_REG_tl3_core_reset       0x0200                                   /* RW Software core res */
  #define AHB_TL3R_TL3_CTRL_REG_tl3_orst_reset       0x0100                                   /* RW Software orst res */
  #define AHB_TL3R_TL3_CTRL_REG_tl3_core_wait        0x0080                                   /* RW TL3_core wait. (u */
  #define AHB_TL3R_TL3_CTRL_REG_reserved_6           0x0040                                   /* RO Reserved. If writ */
  #define AHB_TL3R_TL3_CTRL_REG_tl3_wakeup_dsp       0x0020                                   /* RW TL3 wakes up DSP  */
  #define AHB_TL3R_TL3_CTRL_REG_reserved_4to0        0x001F                                   /* RO Reserved. If writ */
#define AHB_TL3R_TL3_SLEEP_MONITOR_REG   (AHB_TL3R_BASE_ADDR + 0x0040)  /* ARM TL3 Sleep Monitor Register             */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_reserved_31to18       0xFFFC0000
                                                                       /* RO Reserved. If write, should write all 0., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_dspc_sleep       0x00020000
                                                          /* RO DSP Core Sleep Indication., 0: not sleep., 1: sleep., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_oakslp       0x00010000
                             /* RO DSP Core Sleep Command Status., 0: no sleep command., 1: sleep command is issued., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_dsp_iHCLKREQ       0x8000
                     /* RO iCache AHB Transaction Based DSP Core Clock Request Status., 0: not request., 1: request., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_dsp_zHCLKREQ       0x4000
                       /* RO zSMI AHB Transaction Based DSP Core Clock Request Status., 0: not request., 1: request., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_pad_OTCK       0x2000
  /* RO JTAG Port Connection Status., dspc clock request, will sync clear oakslp. intermittent signal. for debug only */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_a5busy       0x1000
           /* RO A5 Busy Status., dspp clock request extension/hold signal from a5 operation, 0: not busy., 1: busy., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_eqbusy       0x0800
           /* RO EQ Busy Status., dspp clock request extension/hold signal from eq operation, 0: not busy., 1: busy., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_tl3r_busy       0x0400
  /* RO TL3 Reg busy Status., dspp clock request extension/hold signal from register operation, 0: not busy., 1: busy */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_smi_busy       0x0200
    /* RO SMI Busy Status., dspp clock request extension/hold signal from smi fifo operation, 0: not busy., 1: busy., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm_wakeup_dsp       0x0100
                                             /* RO ARM Wakeup DSP command Status., 0: no wakeup., 1: ARM wakeup DSP., */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_dma2dsp_dspp_clk_force2       0x0080
  /* RO ARM to DSP DMA Access Clock Force Enable 2 Status., 0: dsp peripheral clock request is asserted on a per tran */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_dspp_clk_force2       0x0040
  /* RO ARM to DSP Peripheral Access Clock Force Enable 2 Status., 0: dsp peripheral clock request is asserted on a p */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_dmem_clk_force2       0x0020
  /* RO ARM to DSP DMEM Access Clock Force Enable 2 Status., 0: dsp core clk request is not forced on. core clk will  */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_pmem_clk_force2       0x0010
  /* RO ARM to DSP PMEM Access Clock Force Enable 2 Status., 0: dsp core clk request is not forced on. core clk will  */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_dma2dsp_dspp_clk_force       0x0008
  /* RO ARM to DSP DMA Access Clock Force Enable Status., 0: dsp peripheral clock request is asserted on a per transa */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_dspp_clk_force       0x0004
  /* RO ARM to DSP Peripheral Access Clock Force Enable Status., 0: dsp peripheral clock request is asserted on a per */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_dmem_clk_force       0x0002
  /* RO ARM to DSP DMEM Access Clock Force Enable Status., 0: dsp core clk request is not forced on. core clk will st */
  #define AHB_TL3R_TL3_SLEEP_MONITOR_REG_arm2dsp_pmem_clk_force       0x0001
  /* RO ARM to DSP PMEM Access Clock Force Enable Status., 0: dsp core clk request is not forced on. core clk will st */

#endif /* __ATHENA_AHB_TL3R_H__ */
